<Window x:Class="HockyMart.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HockyMart"
        mc:Ignorable="d"
        Height="500" Width="850"
        WindowStyle="None"
        ResizeMode="NoResize"
        Background="Transparent"
        AllowsTransparency="True">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#EAB01E"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#EAB01E"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#EAB01E"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#EAB01E"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                            <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border Background="#272537"
            CornerRadius="20">
        <Grid Height="500" VerticalAlignment="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="464"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="75"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <TextBlock 
                       Text="Hocky"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Left"
                       Foreground="White"
                       FontSize="25"
                       FontFamily="/Fonts/#Poppins"
                       Margin="25,3,0,0" Height="29" Width="70"/>

            <StackPanel Grid.Row="1">
                <Label Content="Nama" FontFamily="/Fonts/#Poppins" FontSize="14" Foreground="White" HorizontalAlignment="Left" Margin="40,30,0,0"></Label>
                <Label Content="Harga" FontFamily="/Fonts/#Poppins" FontSize="14" Foreground="White" HorizontalAlignment="Left" Margin="40,20,0,0"></Label>
                <Label Content="Jumlah" FontFamily="/Fonts/#Poppins" FontSize="14" Foreground="White" HorizontalAlignment="Left" Margin="40,20,0,0"></Label>
                <Label Content="Jenis" FontFamily="/Fonts/#Poppins" FontSize="14" Foreground="White" HorizontalAlignment="Left" Margin="40,20,0,0"></Label>
            </StackPanel>

            <StackPanel Grid.Row="1">
                <TextBox x:Name="nama_txt" HorizontalAlignment="Center" Margin= "70,30,0,0" Width="250" Height="25" BorderBrush="White"/>
                <TextBox x:Name="harga_txt" HorizontalAlignment="Center" Margin= "70,20,0,0" Width="250" Height="25" BorderBrush="White" />
                <TextBox x:Name="jumlah_txt" HorizontalAlignment="Center" Margin= "70,22,0,0" Width="250" Height="25" BorderBrush="White" />
                <TextBox x:Name="jenis_txt" HorizontalAlignment="Center" Margin= "70,24,0,0" Width="250" Height="25" BorderBrush="White" />
            </StackPanel>
            <Grid Grid.Row="1" Grid.Column="1">
                <DataGrid x:Name="datagrid" Margin="25,24,40,56">
                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            <Setter Property="BorderThickness" Value="0,0,1,2"/>
                            <Setter Property="BorderBrush" Value="#272537"/>
                            <Setter Property="FontFamily" Value="Poppins"/>
                        </Style>
                        <Style TargetType="{x:Type DataGrid}">
                            <Setter Property="BorderBrush" Value="#272537"/>
                            <Setter Property="BorderThickness" Value="0,0,2,1"/>
                        </Style>
                    </DataGrid.Resources>
                </DataGrid>
            </Grid>
            <StackPanel Grid.Row="1" Orientation="Horizontal">
                <Button Style="{DynamicResource RoundedButtonStyle}" x:Name="InsertBtn" Content="Insert" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="/Fonts/#Poppins" Background="#272537" BorderBrush="White" BorderThickness="2" Height="40" Width="90" FontWeight="DemiBold" Foreground="White" Margin="40,250,0,0" Click="InsertBtn_Click"/>
                <Button Style="{DynamicResource RoundedButtonStyle}" x:Name="DeleteBtn" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="/Fonts/#Poppins" Background="#272537" BorderBrush="White" BorderThickness="2" Height="40" Width="90" FontWeight="DemiBold" Foreground="White" Margin="20,250,0,0" Click="DeleteBtn_Click"/>
                <Button Style="{DynamicResource RoundedButtonStyle}" x:Name="UpdateBtn" Content="Update" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="/Fonts/#Poppins" Background="#272537" BorderBrush="White" BorderThickness="2" Height="40" Width="90" FontWeight="DemiBold" Foreground="White" Margin="20,250,0,0" Click="UpdateBtn_Click"/>
                <Button Style="{DynamicResource RoundedButtonStyle}" x:Name="ClearBtn" Content="Clear" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="/Fonts/#Poppins" Background="#272537" BorderBrush="White" BorderThickness="2" Height="40" Width="90" FontWeight="DemiBold" Foreground="White" Margin="20,250,0,0" Click="ClearBtn_Click_1"/>
            </StackPanel>
            <Label Content="ID" FontFamily="/Fonts/#Poppins" FontSize="14" Foreground="White" HorizontalAlignment="Left" Margin="5,37,0,288" Grid.Column="1" Grid.RowSpan="2"/>
            <TextBox x:Name="search_txt" HorizontalAlignment="Left" Margin= "32,37,0,13" Width="250" Height="25" BorderBrush="White" Grid.Column="1" />
        </Grid>
    </Border>
</Window>
